SoftwareStructure.txt
This note explains the how this folder should be structured
- General folders are named with lowercase
- If you include stuff that you do not want to push to the git
  put it into .gitignore file.

docs:
{
  - Contains every document needed for this app. This includes guides, notes,
    development cycle and even designs.
  - Designs folder are labeled with (number)(Name_of_design)
    F.E-> 1GreyScaleUI
}

src:
{
  - Contains all the source code to compile the file
    ~ actions: {redux action store}
    ~ assets: {images and icons}
    ~ components: {reusable components}
    ~ reducers: {reducer code}
    ~ screens: {
        # all the screens of the app

        > screen folders always ends with Screen(s). F.E AuthScreens
        > screen js files always ends with Screen. F.E SChangePasswordScreen.js
        > screens that will appear first have to have an underscore in font
          of their name. F.E _FeedHomePageScreen.js
        > if a folder contains multiple screen of the same category that will
          be run in a sequence in the app {
            //Sign Up
            General Information -> Phone Verification -> Send Code -> Interests
          }, then start the screen name with Initials that represent it
          F.E SUCodeVerification.js -> SU stands for Sign Up
        }
    ~ store: {set up code for the app}
    ~ styling: {colors and styling}
    ~ App.js is the main js file that will contain all the screen navigation

  - While making changes, follow steps below based on Git rules
    ~ git pull origin master {
        This is to pull everything on the master so that you don't have any
        conflicts later on.
      }
    ~ git checkout -b (name_of_branch) {
        Switch to a new branch so that you can do your editing there and
        make new changes
      }
    ~ git checkout (name_of_branch) {
        Switch between branches without creating a new branch
      }
    ## Make your edits
    ## After your edits
    ~ git add . {
        Add all changes to the branch
      }
    ~ git commit -m "(message)" {
        Write a short message for the changes
      }
    ~ git status {
        Check the changes you've made. Green means that it has been
        added, red means that there are files not added.
      }
    ~ git push --set-upstream origin (name_of_branch) {
        Allows you to push changes to the current branch of your repo
      }
    ## After successfully pushing go to the repo
    ## and submit a new pull request
  }
